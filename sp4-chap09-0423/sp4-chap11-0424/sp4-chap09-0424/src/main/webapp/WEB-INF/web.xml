<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
		http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

<!--"/모든주소" 형태의 url 요청이 들어오면 dispatcher 라는 서블렛이 실행된다. -->
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 	dispatcher 라는 서블렛에 configLocation 으로 관련 설정이 담긴 xml 을 정해준다. -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<!--	컨텍스트 컬렉션 생성할 때 설정 파일 위치를 서블릿 init 메소드의 파라미터로 넘긴다. -->
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath:spring-mvc.xml
				classpath:spring-controller.xml
				classpath:spring-board.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- 	"/모든주소" 형태로 url 요청이 오면 모두 UTF-8 로 인코딩 해주는 필터 실행-->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 	이렇게 하면 jsp 문서 와 서블릿 내부에서 setChaset 이런식의 인코딩 해줄 필요가 없다. -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

</web-app>